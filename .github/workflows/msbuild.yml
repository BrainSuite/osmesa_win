name: OSMesaWin

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: download mesa source
      run: |
        Invoke-WebRequest https://archive.mesa3d.org/mesa-24.3.3.tar.xz -OutFile mesa-24.3.3.tar.xz
        dir
        
    - name: unzip mesa source
      run: |
        # tar xf mesa-24.3.3.tar.xz
        7z x mesa-24.3.3.tar.xz -omesa
        dir
        
    - name: unpack mesa source
      run: |
        7z x mesa/mesa-24.3.3.tar -omesa_src
        dir
        
    - name: prereqs
      run: choco install winflexbison pkgconfiglite ninja
      
    - name: install meson
      run: py -3 -m pip install meson packaging mako


    # - name: Add MSBuild to PATH
    #   uses: microsoft/setup-msbuild@v1.0.2

    # - name: Restore NuGet packages
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    # - name: Build
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   # Add additional options to the MSBuild command line here (like platform or verbosity level).
    #   # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
    #   run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    # - name: get_source
