name: OSMesa Windows Library Builder
run-name: Build OSMesa for Windows by @${{ github.actor }}

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  VERSION: 24.3.3
  MESA_VERSION: 24.3.3

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4
    
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ runner.arch }}
        vsversion: 2019
    - name: set vars
      run: |
        echo "Package=${PWD}/OSMesa_Windows.zip" | Out-File -FilePath $env:GITHUB_ENV -Append

        
    - name: download mesa source
      run: |
        Invoke-WebRequest https://archive.mesa3d.org/mesa-${{ env.MESA_VERSION }}.tar.xz -OutFile mesa-${{ env.MESA_VERSION }}.tar.xz        
        dir
        
    - name: unzip mesa source
      run: |
        7z x mesa-${{ env.MESA_VERSION }}.tar.xz -omesa
        dir mesa

    - name: unpack mesa source
      run: |
        7z x mesa/mesa-${{ env.MESA_VERSION }}.tar -omesa_src
        dir mesa_src
        move mesa_src/mesa-${{ env.MESA_VERSION }} .
        
    - name: prereqs
      run: choco install winflexbison pkgconfiglite ninja

      
    - name: install meson
      run: python3 -m pip install meson packaging mako PyYAML
      
    - name: build
      working-directory: mesa-${{ env.MESA_VERSION }}
      run: |
        meson setup builddir -Dosmesa=true -Dgallium-drivers=softpipe -Dvulkan-drivers="[]" -Dprefix="$PWD/../osmesa" --backend=vs
        meson compile -C builddir
        meson install -C builddir

    - name: package
      run: |
        Compress-Archive -Path osmesa/* -Destination ${{ env.Package }}
      
    - name: Publish ${{ env.Package }}
      uses: ncipollo/release-action@v1
      with:
        artifacts: "${{ env.Package }}"
        tag: ${{ env.VERSION }}        
        allowUpdates: true            
        
